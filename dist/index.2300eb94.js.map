{"mappings":"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","sources":["src/filesAPI.js","src/journalView.js","src/app.js","src/journalApp.js"],"sourcesContent":["export default class FilesAPI {\r\n  static getAllFiles() {\r\n    const files = JSON.parse(localStorage.getItem(\"files\") || \"[]\");\r\n\r\n    return files.sort((a, b) => {\r\n      return new Date(a.updated) > new Date(b.updated) ? 1 : -1;\r\n    });\r\n  }\r\n\r\n  static saveFile(fileToSave) {\r\n    const files = FilesAPI.getAllFiles();\r\n    const existingFile = files.find((file) => file.id === fileToSave.id);\r\n\r\n    // Update/Create logic\r\n    if (existingFile) {\r\n      existingFile.title = fileToSave.title;\r\n      existingFile.body = fileToSave.body;\r\n      existingFile.updated = new Date().toISOString();\r\n    } else {\r\n      fileToSave.id = Math.floor(Math.random() * 1000000);\r\n      fileToSave.updated = new Date().toISOString();\r\n      files.push(fileToSave);\r\n    }\r\n\r\n    localStorage.setItem(\"files\", JSON.stringify(files));\r\n  }\r\n\r\n  static deleteFile(id) {\r\n    const files = FilesAPI.getAllFiles();\r\n    const newFiles = files.filter((file) => file.id != id);\r\n\r\n    localStorage.setItem(\"files\", JSON.stringify(newFiles));\r\n  }\r\n}\r\n","export default class FilesView {\r\n  constructor(\r\n    root,\r\n    { onFileSelect, onFileAdd, onFileEdit, onFileDelete } = {}\r\n  ) {\r\n    this.root = root;\r\n    this.onFileSelect = onFileSelect;\r\n    this.onFileAdd = onFileAdd;\r\n    this.onFileEdit = onFileEdit;\r\n    this.onFileDelete = onFileDelete;\r\n    this.root.innerHTML = `\r\n      <aside class=\"sidebar\">\r\n        <div\r\n          class=\"app-name-box\"\r\n        >\r\n        Journal App\r\n        </div>\r\n        <ul class=\"file-box\"></ul>\r\n        <button class=\"add-file-btn\">\r\n          <i class=\"fa-regular fa-plus\"></i>\r\n        </button>\r\n      </aside>\r\n      <div class=\"journal-box\">\r\n        <div class=\"journal-box--header\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"journal-file-name\"\r\n            value=\"Nome do Arquivo\"\r\n          />\r\n          <div class=\"icons-div\">\r\n            <svg\r\n              class=\"save-disk-icon\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path\r\n                d=\"M14 3h2.997v5h-2.997v-5zm9 1v20h-22v-24h17.997l4.003 4zm-17 5h12v-7h-12v7zm14 4h-16v9h16v-9z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        <div class=\"journal-box--journal\">\r\n          <div\r\n            class=\"journal-text-area\"\r\n            contenteditable=\"true\"\r\n            spellcheck=\"false\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    const journalTextArea = this.root.querySelector(\".journal-text-area\");\r\n    const journalFileName = this.root.querySelector(\".journal-file-name\");\r\n    const addFileBtnElement = this.root.querySelector(\".add-file-btn\");\r\n    const saveDiskBtnElement = this.root.querySelector(\".save-disk-icon\");\r\n\r\n    addFileBtnElement.addEventListener(\"click\", () => {\r\n      this.onFileAdd();\r\n    });\r\n\r\n    [journalFileName, journalTextArea].forEach((input) => {\r\n      input.addEventListener(\"blur\", () => {\r\n        setTimeout(() => {\r\n          const updatedTitle = journalFileName.value.trim();\r\n          const updatedBody = journalTextArea.innerHTML.trim();\r\n\r\n          this.onFileEdit(updatedTitle, updatedBody);\r\n        }, 500);\r\n      });\r\n    });\r\n\r\n    saveDiskBtnElement.addEventListener(\"click\", () => {\r\n      const updatedTitle = journalFileName.value.trim();\r\n      const updatedBody = journalTextArea.innerHTML.trim();\r\n\r\n      this.onFileEdit(updatedTitle, updatedBody);\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      if (e.ctrlKey && e.key === \"s\") {\r\n        e.preventDefault();\r\n        const updatedTitle = journalFileName.value.trim();\r\n        const updatedBody = journalTextArea.innerHTML.trim();\r\n\r\n        this.onFileEdit(updatedTitle, updatedBody);\r\n      }\r\n    });\r\n\r\n    this.updateJournalVisibility(false);\r\n  }\r\n\r\n  _createListItemHTML(id, title) {\r\n    const MAX_BODY_LENGTH = 20;\r\n\r\n    return `\r\n    <li class=\"file-item\" data-file-id=\"${id}\">\r\n            <svg\r\n              clip-rule=\"evenodd\"\r\n              fill-rule=\"evenodd\"\r\n              stroke-linejoin=\"round\"\r\n              stroke-miterlimit=\"2\"\r\n              viewBox=\"0 0 24 24\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"m10.211 7.155c-.141-.108-.3-.157-.456-.157-.389 0-.755.306-.755.749v8.501c0 .445.367.75.755.75.157 0 .316-.05.457-.159 1.554-1.203 4.199-3.252 5.498-4.258.184-.142.29-.36.29-.592 0-.23-.107-.449-.291-.591-1.299-1.002-3.945-3.044-5.498-4.243z\"\r\n              />\r\n            </svg>\r\n            <span class=\"file-title\">\r\n              ${title.substring(0, MAX_BODY_LENGTH)}\r\n              ${title.length > MAX_BODY_LENGTH ? \"...\" : \"\"}\r\n            </span>\r\n          </li>\r\n    `;\r\n  }\r\n\r\n  updateFileBoxList(files) {\r\n    const fileBoxListElement = document.querySelector(\".file-box\");\r\n\r\n    // Empty list\r\n    fileBoxListElement.innerHTML = \"\";\r\n\r\n    files.forEach((file) => {\r\n      const fileMarkup = this._createListItemHTML(file.id, file.title);\r\n\r\n      fileBoxListElement.insertAdjacentHTML(\"beforeend\", fileMarkup);\r\n    });\r\n\r\n    // Adds select and delete events for each file item\r\n    fileBoxListElement.querySelectorAll(\".file-item\").forEach((fileItem) => {\r\n      fileItem.addEventListener(\"click\", () => {\r\n        this.onFileSelect(fileItem.dataset.fileId);\r\n      });\r\n\r\n      fileItem.addEventListener(\"contextmenu\", (e) => {\r\n        e.preventDefault();\r\n\r\n        const doDelete = confirm(\r\n          \"Tem certeza que deseja deletar este arquivo?\"\r\n        );\r\n\r\n        if (doDelete) {\r\n          this.onFileDelete(fileItem.dataset.fileId);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  updateActiveFile(file) {\r\n    this.root.querySelector(\".journal-file-name\").value = file.title;\r\n    this.root.querySelector(\".journal-text-area\").innerHTML = file.body;\r\n\r\n    this.root.querySelectorAll(\".file-item\").forEach((fileItem) => {\r\n      fileItem.classList.remove(\"active\");\r\n    });\r\n\r\n    this.root\r\n      .querySelector(`.file-item[data-file-id=\"${file.id}\"]`)\r\n      .classList.add(\"active\");\r\n  }\r\n\r\n  updateJournalVisibility(visible) {\r\n    this.root.querySelector(\".journal-box\").style.visibility = visible\r\n      ? \"visible\"\r\n      : \"hidden\";\r\n  }\r\n}\r\n","import JournalApp from \"./journalApp\";\r\n\r\nconst mainHtmlElement = document.querySelector(\".main\");\r\nconst journalApp = new JournalApp(mainHtmlElement);\r\n","import FilesAPI from \"./filesAPI\";\r\nimport FilesView from \"./journalView\";\r\n\r\nexport default class JournalApp {\r\n  constructor(root) {\r\n    this.files = [];\r\n    this.activeFile = null;\r\n    this.view = new FilesView(root, this._handlers());\r\n\r\n    this._refreshFiles();\r\n  }\r\n\r\n  _refreshFiles() {\r\n    const files = FilesAPI.getAllFiles();\r\n    const filesLastIndex = files.length - 1;\r\n\r\n    this._setFiles(files);\r\n\r\n    if (files.length > 0) {\r\n      this._setActiveFile(files[filesLastIndex]);\r\n    }\r\n  }\r\n\r\n  _setFiles(files) {\r\n    this.files = files;\r\n    this.view.updateFileBoxList(files);\r\n    this.view.updateJournalVisibility(files.length > 0);\r\n  }\r\n\r\n  _setActiveFile(file) {\r\n    this.activeFile = file;\r\n    this.view.updateActiveFile(file);\r\n  }\r\n\r\n  _handlers() {\r\n    return {\r\n      onFileSelect: (fileId) => {\r\n        const selectedFile = this.files.find((file) => file.id === +fileId);\r\n        this._setActiveFile(selectedFile);\r\n      },\r\n\r\n      onFileAdd: () => {\r\n        const newFile = {\r\n          title: \"Nome do arquivo...\",\r\n          body: \"Comece a escrever!\",\r\n        };\r\n\r\n        FilesAPI.saveFile(newFile);\r\n        this._refreshFiles();\r\n      },\r\n\r\n      onFileEdit: (title, body) => {\r\n        FilesAPI.saveFile({\r\n          id: this.activeFile.id,\r\n          title: title,\r\n          body: body,\r\n        });\r\n\r\n        this._refreshFiles();\r\n      },\r\n\r\n      onFileDelete: (fileId) => {\r\n        FilesAPI.deleteFile(fileId);\r\n        this._refreshFiles();\r\n      },\r\n    };\r\n  }\r\n}\r\n"],"names":["$64f068a68721acfc$export$2e2bcd8739ae039","static","JSON","parse","localStorage","getItem","sort","a","b","Date","updated","fileToSave","files","getAllFiles","existingFile","find","file","id","title","body","toISOString","Math","floor","random","push","setItem","stringify","newFiles","filter","$17e3081afa8d2482$export$2e2bcd8739ae039","constructor","root","onFileSelect","onFileAdd","onFileEdit","onFileDelete","this","innerHTML","journalTextArea","querySelector","journalFileName","addFileBtnElement","saveDiskBtnElement","addEventListener","input","setTimeout","updatedTitle","value","trim","updatedBody","document","e","ctrlKey","key","preventDefault","$e73bf42412feb220$var$mainHtmlElement","activeFile","view","_handlers","_refreshFiles","filesLastIndex","length","_setFiles","_setActiveFile","updateFileBoxList","updateJournalVisibility","updateActiveFile","fileId","selectedFile","saveFile","deleteFile"],"version":3,"file":"index.2300eb94.js.map"}